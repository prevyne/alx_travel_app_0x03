databases:
  # 1. Define the PostgreSQL database here
  - name: alx-travel-app-db
    plan: free # Use the free plan for this project

services:
  # 2. The Redis instance (for Celery)
  - type: redis
    name: celery-broker
    plan: free
    ipAllowList: []

  # 3. The Web Service (your Django app)
  - type: web
    name: alx-travel-app
    env: python
    buildCommand: "./build.sh"
    startCommand: "gunicorn alx_travel_app.wsgi"
    envVars:
      - key: PYTHON_VERSION
        value: 3.10.13
      - key: SECRET_KEY
        generateValue: true
      - key: DEBUG
        value: False
      - key: DATABASE_URL # Get the database URL from the database service
        fromDatabase:
          name: alx-travel-app-db
          property: connectionString
      - key: REDIS_URL # Get the Redis URL from the Redis service
        fromService:
          type: redis
          name: celery-broker
          property: connectionString
      # Add your sensitive email credentials later in the Render dashboard's Environment tab
      # - key: EMAIL_HOST_USER
      #   sync: false
      # - key: EMAIL_HOST_PASSWORD
      #   sync: false

  # 4. The Background Worker (for Celery)
  - type: worker
    name: celery-worker
    env: python
    startCommand: "celery -A alx_travel_app worker -l info"
    envVars:
      - key: PYTHON_VERSION
        value: 3.10.13
      - key: DATABASE_URL # The worker also needs access to the database
        fromDatabase:
          name: alx-travel-app-db
          property: connectionString
      - key: REDIS_URL # The worker needs the Redis URL to connect to Celery
        fromService:
          type: redis
          name: celery-broker
          property: connectionString
